<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AggregateSource.SqlStreamStore</name>
    </assembly>
    <members>
        <member name="T:SSS.Repository`1">
            <summary>
            Represents a virtual collection of <typeparamref name="TAggregateRoot"/>.
            </summary>
            <typeparam name="TAggregateRoot">The type of the aggregate root in this collection.</typeparam>
        </member>
        <member name="M:SSS.Repository`1.#ctor(System.Func{`0},AggregateSource.UnitOfWork,SqlStreamStore.IStreamStore)">
            <summary>
            Initializes a new instance of the <see cref="T:SSS.Repository`1"/> class.
            </summary>
            <param name="rootFactory">The aggregate root entity factory.</param>
            <param name="unitOfWork">The unit of work to interact with.</param>
            <param name="eventStore">The event store to use.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="rootFactory"/> or <paramref name="unitOfWork"/> or <paramref name="eventStore"/> is null.</exception>
        </member>
        <member name="M:SSS.Repository`1.GetAsync(System.String)">
            <summary>
            Gets the aggregate root entity associated with the specified aggregate identifier.
            </summary>
            <param name="identifier">The aggregate identifier.</param>
            <returns>An instance of <typeparamref name="TAggregateRoot"/>.</returns>
            <exception cref="T:AggregateSource.AggregateNotFoundException">Thrown when an aggregate is not found.</exception>
        </member>
        <member name="M:SSS.Repository`1.GetOptionalAsync(System.String)">
            <summary>
            Attempts to get the aggregate root entity associated with the aggregate identifier.
            </summary>
            <param name="identifier">The aggregate identifier.</param>
            <returns>The found <typeparamref name="TAggregateRoot"/>, or empty if not found.</returns>
        </member>
        <member name="M:SSS.Repository`1.Add(System.String,`0)">
            <summary>
            Adds the aggregate root entity to this collection using the specified aggregate identifier.
            </summary>
            <param name="identifier">The aggregate identifier.</param>
            <param name="root">The aggregate root entity.</param>
        </member>
        <member name="P:SSS.Repository`1.RootFactory">
            <summary>
            Gets the aggregate root entity factory.
            </summary>
            <value>
            The aggregate root entity factory.
            </value>
        </member>
        <member name="P:SSS.Repository`1.UnitOfWork">
            <summary>
            Gets the unit of work.
            </summary>
            <value>
            The unit of work.
            </value>
        </member>
        <member name="P:SSS.Repository`1.EventStore">
            <summary>
            Gets the event store to use.
            </summary>
            <value>
            The event store to use.
            </value>
        </member>
    </members>
</doc>
